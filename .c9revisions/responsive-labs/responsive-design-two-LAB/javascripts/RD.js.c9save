{"ts":1372268303024,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\nlisten for the resize event on the window using jquery and call a \nresizedWindow function passing the current width of the widow\n*/\n\n\n//hint you will need this in your event handler \n//current_width = parseInt($this.outerWidth, 10);\n\n\n\nvar RD = (function(){\n\tfunction _return_public(){\n\t\treturn{\n\t\t\tinit: init,\n\t\t\t//release a resizedWindow function as we call it outside of the RD namespace\n\t\t}\n\t}\n\t\n\tfunction init(){\n\t\tconsole.log(\"RD::init: Starting up the app\");\n\t}\n\t\n\t/*----------private-----------*/\n\t\n\t\n\t\n\t/**\n\t\t * Resized Window\n\t\t * \n\t\t * The window was resized so change the layout\n\t\t * \n\t\t * @param String current_width\n\t\t *\n\t\t * @return null\n\t\t */\n\t\tfunction resizedWindow(width){\n\t\t\tvar size = \"out_of_bounds\";\n\t\t\t//console.log(\"RS::resizedWindow\");\n\t\t\tif(width <= 800){\n\t\t\t\tsize = \"large\";\n\t\t\t}\n\t\t\t//if width is less than or equal to 600\n            if(width <= 600){\n\t\t\t\tsize = \"small\";\n\t\t\t}\n\t\t\tif(width <= 400){\n\t\t\t\tsize = \"very_small\";\n\t\t\t}\n\t\t\t//remove all classes from the body and add the right one\n\t\t\tconsole.log(\"width: \" + width + \" to \" + size);\n\t\t\treturn null;\n\t\t};\n\t\n\t\n\treturn _return_public();\n})();\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1129}]],"length":1129}
{"contributors":[],"silentsave":false,"ts":1372268327729,"patch":[[{"diffs":[[0,", 10);\n\n"],[1,"$(window).on(\"resize\", function(){\n    console.info(\"resize triggered\");\n\tvar $this = this,\n\t\tcurrent_width = parseInt($this.outerWidth, 10);\n\tRD.resizedWindow(current_width);\n});"],[0,"\n\nvar RD"]],"start1":229,"start2":229,"length1":16,"length2":195}]],"length":1308,"saved":false}
{"ts":1372268336243,"patch":[[{"diffs":[[0,"size"],[-1," triggered"],[0,"\");\n"]],"start1":292,"start2":292,"length1":18,"length2":8}]],"length":1298,"saved":false}
